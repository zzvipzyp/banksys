<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 扫描控制器的注解 -->
    <!--  可以指定多个包进行扫描，多个包之间使用逗号分隔 -->
    <!--<context:component-scan base-package="com.qfedu.controller,com.qfedu.common"></context:component-scan>-->

    <!-- use-default-filters="false" 默认是true，使用默认的过滤器扫描@Controller/@Service等注解
        设置为false，表示不使用默认的过滤器扫描注解
        context:include-filter 设置扫描哪些注解
        context:exclude-filter 设置不扫描哪些注解
    -->
    <context:component-scan base-package="com.qfedu" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:include-filter>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"></context:include-filter>
    </context:component-scan>



    <!--  如果要在控制器方法的参数上直接使用验证注解进行修饰，需要该配置 -->
    <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>

    <!-- 重要配置！！！ -->
    <!--  设置转换服务/验证器 -->
    <mvc:annotation-driven conversion-service="convertorService" validator="validator">
        <!-- 处理json里的日期数据，默认日期被fastjson转为时间戳数据 -->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.qfedu.common.JsonObjectMapper">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 设置自定义的转换器 -->
    <bean id="convertorService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="com.qfedu.convert.CustomerDateConvert"></bean>
            </list>
        </property>
    </bean>

    <!-- 配置资源文件 -->
    <bean id="hibernateMessages" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="defaultEncoding" value="UTF-8"></property>
        <property name="basenames">
            <list>
                <value>ValidationMessages</value>
            </list>
        </property>
    </bean>
    <!-- 配置验证器 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
        <property name="validationMessageSource" ref="hibernateMessages"></property>
    </bean>

    <!--  url-pattern配置成/后，  使用如下配置将静态资源交给web服务器默认的servlet进行处理 -->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>


    <!-- 文件上传的解析器  id的值不能改-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 上传文件的最大大小 ，单位字节 ，比如 1024 * 1024 = 1M-->
        <property name="maxUploadSize" value="1048576"></property>

    </bean>

    <!-- 拦截器相关配置 -->
    <!--  配置多个拦截器，配置顺序决定执行顺序 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!--  配置哪些资源需要拦截 -->
            <!-- 任意路径下，后缀是.do的资源 -->
            <mvc:mapping path="/**/*.do" />
            <!-- 指定自定义拦截器 -->
            <bean class="com.qfedu.interceptor.TimeInterceptor"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <!--  配置哪些资源需要拦截 -->
            <!-- /** 任意路径的任意资源 -->
            <mvc:mapping path="/**" />
            <!--  配置需要放行的资源 -->
            <!--  js相关资源需要放行，两种写法都可以 -->
            <mvc:exclude-mapping path="/js/**"></mvc:exclude-mapping>
            <mvc:exclude-mapping path="/layui/**"></mvc:exclude-mapping>
            <!--<mvc:exclude-mapping path="/**/*.js"></mvc:exclude-mapping>-->
            <!-- 登陆相关资源，直接放行 -->
            <mvc:exclude-mapping path="/**/login.*"></mvc:exclude-mapping>
            <!-- 指定自定义拦截器 -->
            <bean class="com.qfedu.interceptor.LoginInterceptor"></bean>
        </mvc:interceptor>
        <!--<mvc:interceptor>-->
            <!--&lt;!&ndash;  配置哪些资源需要拦截 &ndash;&gt;-->
            <!--&lt;!&ndash; /** 任意路径的任意资源 &ndash;&gt;-->
            <!--<mvc:mapping path="/**/*.do" />-->
            <!--&lt;!&ndash;  配置需要放行的资源 &ndash;&gt;-->
            <!--&lt;!&ndash; 登陆相关资源，直接放行 &ndash;&gt;-->
            <!--<mvc:exclude-mapping path="/**/login.do"></mvc:exclude-mapping>-->
            <!--&lt;!&ndash; 指定自定义拦截器 &ndash;&gt;-->
            <!--<bean class="com.qfedu.interceptor.LoginInterceptor"></bean>-->
        <!--</mvc:interceptor>-->
    </mvc:interceptors>

    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 前缀 -->
        <property name="prefix" value="/"></property>
        <!-- 后缀 -->
        <property name="suffix" value=".jsp"></property>

    </bean>
</beans>